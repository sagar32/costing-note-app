{"version":3,"sources":["components/LoaderButton.js","containers/Login.js","containers/Cost.jsx","libs/hooksLib.js","App.js","serviceWorker.js","index.js"],"names":["LoaderButton","isLoading","className","disabled","props","Button","Glyphicon","glyph","children","Login","validateForm","state","username","length","password","handleSubmit","event","preventDefault","setState","setIsLoading","changeAuthState","setTimeout","redirect","error","console","log","this","isAuthenticated","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","value","onChange","e","target","block","Alert","danger","Component","Cost","initialState","useState","fields","setValues","id","useFormFields","name","tar","denier1","pick","panno","denier2","rate1","rate2","handleFieldChange","weffWeight","setWeffWeight","worpWeight","setWorpWeight","resultRate1","setResultRate1","resultRate2","setResultRate2","JSON","parse","localStorage","getItem","storedRecords","setStoredRecords","totalweight","setTotalWeight","totalrate","setTotalRate","a","wow","wew","r1","r2","tw","tr","push","toString","setItem","stringify","reverse","Row","md","lg","xs","sm","Col","toFixed","map","record","i","key","parseFloat","App","newAuthState","to","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6d99a6ef.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Glyphicon } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n  isLoading,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Button\r\n      className={`LoaderButton ${className}`}\r\n      disabled={disabled || isLoading}\r\n      {...props}\r\n    >\r\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}","import React, { useState, Component } from \"react\";\r\nimport { FormGroup, FormControl, ControlLabel,Alert } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { Redirect,withRouter } from 'react-router';\r\n// import Cost from \"./Cost\";\r\n// import { render } from \"@testing-library/react\";\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      isLoading: false,\r\n      redirect: false,\r\n      error:false,\r\n    };\r\n  }\r\n\r\n\r\n  validateForm = () => {\r\n    return this.state.username.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n     try {\r\n      this.setState({ setIsLoading: true });\r\n      if (this.state.username != null &&\r\n        this.state.password != null ) {\r\n        if (this.state.username == \"hd\" && this.state.password == \"hd\") {\r\n          \r\n          this.props.changeAuthState(true)\r\n          setTimeout(()=>{\r\n            this.setState({ setIsLoading: false, redirect: true,error:false });\r\n          },500)\r\n   \r\n          console.log('loged in')\r\n        } else {\r\n          this.setState({error:'Invalid Credentials'})\r\n          console.log('failed loged in')\r\n        }\r\n\r\n\r\n      }\r\n    } catch (error) {\r\n      console.log('error:', error);\r\n      this.setState({ setIsLoading: false });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n    \r\n        this.props.isAuthenticated == false &&\r\n      \r\n      <div className=\"Login\">\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"username\" bsSize=\"large\">\r\n            <ControlLabel>UserName</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"text\"\r\n              value={this.state.username}\r\n              onChange={e => this.setState({username:e.target.value})}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={e => this.setState({password:e.target.value})}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <LoaderButton\r\n            block\r\n            type=\"submit\"\r\n            bsSize=\"large\"\r\n            isLoading={this.state.isLoading}\r\n            disabled={!this.validateForm()}\r\n\r\n          >\r\n            Login\r\n               </LoaderButton>\r\n        {\r\n          this.state.error &&\r\n        <Alert danger>{this.state.error}</Alert>\r\n        }\r\n        </form>\r\n        {/* {this.state.redirect && <Redirect to=\"/cost\"/>} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\nimport { FormGroup, FormControl, ControlLabel, Row,Col } from \"react-bootstrap\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { Redirect,withRouter } from 'react-router';\n\n\n\n\nfunction Cost() {\n  \n    const [fields, handleFieldChange] = useFormFields({\n        name: \"\",\n        tar: \"\",\n        denier1: \"\",\n        pick: \"\",\n        panno: \"\",\n        denier2: \"\",\n        rate1: \"\",\n        rate2: \"\",\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const [weffWeight, setWeffWeight] = useState(0);\n    const [worpWeight, setWorpWeight] = useState(0);\n    const [resultRate1, setResultRate1] = useState(0);\n    const [resultRate2, setResultRate2] = useState(0);\n    const [storedRecords, setStoredRecords] = useState(JSON.parse(localStorage.getItem('storedRecords')) || []);\n    const [totalweight, setTotalWeight] = useState(0);\n    \n    \n    const [totalrate, setTotalRate] = useState(0);\n\n    function validateForm() {\n        return fields.name.length > 0\n            && fields.tar > 0\n            && fields.denier1 > 0\n            && fields.pick > 0\n            && fields.panno > 0\n            && fields.denier2 > 0\n            && fields.rate1 > 0\n            && fields.rate2 > 0\n            ;\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        setIsLoading(true);\n\n        try {\n            console.log(\"fields:\", fields);\n\n            let wow = (fields.tar * fields.denier1 * 110) / 9000000;\n            setWorpWeight(wow);\n\n            let wew = (fields.pick * fields.panno * fields.denier2 * 106) / 9000000;\n            setWeffWeight(wew);\n\n            let r1 = (wow * fields.rate1) / 100;\n            setResultRate1(r1);\n\n            let r2 = (wew * fields.rate2) / 100;\n            setResultRate2(r2);\n            \n            let tw = (wow + wew);\n            setTotalWeight(tw);\n\n            let tr = (r1 + r2);\n            setTotalRate(tr);\n            \n            setTimeout(()=>{\n                storedRecords.push({\n                    ...fields, weffWeight: wew.toString(), worpWeight: wow.toString(), resultRate1: r1.toString(),\n                    resultRate2: r2.toString(), totalweight: tw.toString(), totalrate: tr.toString()\n                });\n                localStorage.setItem('storedRecords', JSON.stringify(storedRecords));\n                setStoredRecords(storedRecords.reverse())\n                setIsLoading(false)\n            },1000);\n            \n\n        } catch (e) {\n            console.log(e);\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <div className=\"padded-div\">\n            <form className=\"form\" className=\"form-box\" onSubmit={handleSubmit}>\n                <Row md={6} lg={6} xs={6} sm={6}> \n                    <Col  md={6} lg={6} xs={6} sm={6}>\n                        <FormGroup controlId=\"name\" bsSize=\"large\">\n                            <ControlLabel>Name</ControlLabel>\n                            <FormControl\n                                autoFocus=\"true\"\n                                type=\"text\"\n                                value={fields.name}\n                                onChange={handleFieldChange}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col  md={6} lg={6} xs={6} sm={6}>\n                        <FormGroup controlId=\"tar\" bsSize=\"large\">\n                            <ControlLabel>Tar</ControlLabel>\n                            <FormControl\n                                autoFocus\n                                type=\"number\"\n                                value={fields.tar}\n                                onChange={handleFieldChange}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col  md={6} lg={6} xs={6} sm={6}>\n                        <FormGroup controlId=\"denier1\" bsSize=\"large\">\n                            <ControlLabel>Denier1</ControlLabel>\n                            <FormControl\n                                autoFocus\n                                type=\"number\"\n                                value={fields.denier1}\n                                onChange={handleFieldChange}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col  md={6} lg={6} xs={6} sm={6}>\n                        <FormGroup controlId=\"pick\" bsSize=\"large\">\n                            <ControlLabel>Pick</ControlLabel>\n                            <FormControl\n                                autoFocus\n                                type=\"number\"\n                                value={fields.pick}\n                                onChange={handleFieldChange}\n                            />\n                        </FormGroup>\n                    </Col>\n                    \n                    <Col  md={6} lg={6} xs={6} sm={6}>\n                        <FormGroup controlId=\"panno\" bsSize=\"large\">\n                            <ControlLabel>Panno</ControlLabel>\n                            <FormControl\n                                autoFocus\n                                type=\"number\"\n                                value={fields.panno}\n                                onChange={handleFieldChange}\n                            />\n                        </FormGroup>\n                    </Col>\n\n                    <Col  md={6} lg={6} xs={6} sm={6}>\n                        <FormGroup controlId=\"denier2\" bsSize=\"large\">\n                            <ControlLabel>Denier2</ControlLabel>\n                            <FormControl\n                                autoFocus\n                                type=\"number\"\n                                value={fields.denier2}\n                                onChange={handleFieldChange}\n                            />\n                        </FormGroup>\n                    </Col>\n\n                    <Col  md={6} lg={6} xs={6} sm={6}>\n                        <FormGroup controlId=\"rate1\" bsSize=\"large\">\n                            <ControlLabel>Rate1</ControlLabel>\n                            <FormControl\n                                autoFocus\n                                type=\"number\"\n                                value={fields.rate1}\n                                onChange={handleFieldChange}\n                            />\n                        </FormGroup>\n                    </Col>\n\n                    <Col  md={6} lg={6} xs={6} sm={6}>\n                        <FormGroup controlId=\"rate2\" bsSize=\"large\">\n                            <ControlLabel>Rate2</ControlLabel>\n                            <FormControl\n                                autoFocus\n                                type=\"number\"\n                                value={fields.rate2}\n                                onChange={handleFieldChange}\n                            />\n                        </FormGroup>\n                    </Col>\n\n                </Row>\n\n\n                <br />\n                <LoaderButton\n                    block\n                    type=\"submit\"\n                    bsSize=\"large\"\n                    isLoading={isLoading}\n                    disabled={!validateForm()}\n                >\n                    Count\n               </LoaderButton>\n                <div className=\"result-box\">\n                    <Row>\n                        <Col md={6} lg={6} xs={6} sm={6}>\n                            <FormGroup>\n                                <ControlLabel>\n                                    Worp Weight\n                                </ControlLabel>\n                                <span>\n                                    {worpWeight.toFixed(4)}\n                                </span>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={6} xs={6} sm={6}>\n                            <FormGroup>\n                                <ControlLabel>Weff Weight</ControlLabel>\n                                <span>\n                                {weffWeight.toFixed(4)}\n                                </span>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={6} xs={6} sm={6}>\n                            <FormGroup>\n                                <ControlLabel>Rate 1 </ControlLabel>\n                                <span>{resultRate1.toFixed(4)}</span>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={6} xs={6} sm={6}>\n                            <FormGroup>\n                               <ControlLabel>Rate 2</ControlLabel>\n                                <span>{resultRate2.toFixed(4)}</span>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={6} xs={6} sm={6}>\n                            <FormGroup>\n                                <ControlLabel>Total Weight </ControlLabel>\n                                <span>{totalweight.toFixed(4)}</span>\n \n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={6} xs={6} sm={6}>\n                            <FormGroup>\n                                <ControlLabel>Total Rate</ControlLabel>\n                                <span>{totalrate.toFixed(4)}</span>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    \n                    \n                    \n                    \n                    \n                </div>\n                {\n                    storedRecords &&storedRecords.length>0&&\n                \n                <table className=\"table table-dark table-sm table-small compact\">\n                    <thead>\n                        <th>\n                            Name\n                        </th>\n                        <th>Tar</th>\n                        <th>D1</th>\n                        <th>D2</th>\n                        <th>Pick</th>\n                        <th>Panno</th>\n                        <th>R 1</th>\n                        <th>R 2</th>\n                        <th>Worp We.</th>\n                        <th>Weff We.</th>\n                        <th>Re. R 1</th>\n                        <th>Re. R 2</th>\n                        <th>To. We.</th>\n                        <th>To. Rt.</th>\n                    </thead>\n                    <tbody>\n                        {\n                            storedRecords &&storedRecords.length>0&& storedRecords.map((record,i)=>{\n                                return (\n                                    <tr key={i}>\n                                        <td>\n                                            {\n                                                record.name\n                                            }\n                                        </td>\n                                        <td>{ record.tar }</td>\n                                        <td>{ record.denier1 }</td>\n                                        <td>{ record.denier2 }</td>\n                                        <td>{ record.pick }</td>\n                                        <td>{ record.panno }</td>\n                                        <td>{ record.rate1 }</td>\n                                        <td>{ record.rate2 }</td>\n                                        <td>{ parseFloat(record.worpWeight).toFixed(2) }</td>\n                                        <td>{ parseFloat(record.weffWeight).toFixed(2) }</td>\n                                        <td>{parseFloat( record.resultRate1).toFixed(2) }</td>\n                                        <td>{ parseFloat(record.resultRate2).toFixed(2) }</td>\n                                        <td>{ parseFloat(record.totalweight).toFixed(2) }</td>\n                                        <td>{parseFloat( record.totalrate).toFixed(2) }</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n                }\n            </form>\n        </div>\n    );\n}\nexport default Cost","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}","import React from \"react\";\n//import { Link } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Cost from \"./containers/Cost\";\nimport Login from \"./containers/Login\";\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      isAuthenticated :false\n    }\n  }\n  changeAuthState(newAuthState){\n    this.setState({isAuthenticated:newAuthState})\n  }\n  render(){\n\n    return (\n      <div className=\"App container\">\n          <div className=\"navbar\">\n            <span className=\"item\">\n                {\n                  this.state.isAuthenticated\n                  ?\n                  <h4>HD Textile</h4>\n                  :\n                  <Link to=\"/\">\n                    Login\n                  </Link>\n                }\n  \n            </span>\n          </div>\n          {\n              this.state.isAuthenticated\n              ?      \n              <Cost isAuthenticated={this.state.isAuthenticated} changeAuthState={(newAuthState)=>this.changeAuthState(newAuthState)}/>\n              :\n              <Login isAuthenticated={this.state.isAuthenticated} changeAuthState={(newAuthState)=>this.changeAuthState(newAuthState)}/>\n          }\n\n        {/* <Routes isAuthenticated={this.state.isAuthenticated} changeAuthState={(newAuthState)=>this.changeAuthState(newAuthState)} /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}