{"version":3,"sources":["components/LoaderButton.js","containers/Login.js","containers/Cost.jsx","libs/hooksLib.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["LoaderButton","isLoading","className","disabled","props","Button","Glyphicon","glyph","children","Login","validateForm","state","username","length","password","handleSubmit","event","preventDefault","setState","setIsLoading","changeAuthState","setTimeout","redirect","error","history","push","console","log","this","isAuthenticated","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","value","onChange","e","target","block","Alert","danger","Component","Cost","initialState","useState","fields","setValues","id","useFormFields","name","tar","denier1","pick","panno","denier2","rate1","rate2","handleFieldChange","weffWeight","setWeffWeight","worpWeight","setWorpWeight","resultRate1","setResultRate1","resultRate2","setResultRate2","JSON","parse","localStorage","getItem","storedRecords","setStoredRecords","totalweight","setTotalWeight","totalrate","setTotalRate","a","wow","wew","r1","r2","tw","tr","toString","setItem","stringify","reverse","Row","md","lg","xs","sm","Col","toFixed","map","record","parseInt","Routes","path","newAuthState","App","to","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e06ed467.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Glyphicon } from \"react-bootstrap\";\r\nimport \"./LoaderButton.css\";\r\n\r\nexport default function LoaderButton({\r\n  isLoading,\r\n  className = \"\",\r\n  disabled = false,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Button\r\n      className={`LoaderButton ${className}`}\r\n      disabled={disabled || isLoading}\r\n      {...props}\r\n    >\r\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\r\n      {props.children}\r\n    </Button>\r\n  );\r\n}","import React, { useState, Component } from \"react\";\r\nimport { FormGroup, FormControl, ControlLabel,Alert } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { Redirect } from 'react-router';\r\n// import Cost from \"./Cost\";\r\n// import { render } from \"@testing-library/react\";\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      isLoading: false,\r\n      redirect: false,\r\n      error:false,\r\n    };\r\n  }\r\n\r\n\r\n  validateForm = () => {\r\n    return this.state.username.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n     try {\r\n      this.setState({ setIsLoading: true });\r\n      if (this.state.username != null &&\r\n        this.state.password != null ) {\r\n        if (this.state.username == \"dhaval\" && this.state.password == \"dhaval123\") {\r\n          \r\n          this.props.changeAuthState(true)\r\n          setTimeout(()=>{\r\n            this.setState({ setIsLoading: false, redirect: true,error:false });\r\n            this.props.history.push('/cost')\r\n          },500)\r\n          console.log('loged in')\r\n        } else {\r\n          this.setState({error:'Invalid Credentials'})\r\n          console.log('failed loged in')\r\n        }\r\n\r\n\r\n      }\r\n    } catch (error) {\r\n      console.log('error:', error);\r\n      this.setState({ setIsLoading: false });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n    \r\n        this.props.isAuthenticated == false &&\r\n      \r\n      <div className=\"Login\">\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"username\" bsSize=\"large\">\r\n            <ControlLabel>UserName</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"text\"\r\n              value={this.state.username}\r\n              onChange={e => this.setState({username:e.target.value})}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={e => this.setState({password:e.target.value})}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <LoaderButton\r\n            block\r\n            type=\"submit\"\r\n            bsSize=\"large\"\r\n            isLoading={this.state.isLoading}\r\n            disabled={!this.validateForm()}\r\n\r\n          >\r\n            Login\r\n               </LoaderButton>\r\n        {\r\n          this.state.error &&\r\n        <Alert danger>{this.state.error}</Alert>\r\n        }\r\n        </form>\r\n        {/* {this.state.redirect && <Redirect to=\"/cost\"/>} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { FormGroup, FormControl, ControlLabel, Row,Col } from \"react-bootstrap\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\n\r\n\r\n\r\nexport default function Cost() {\r\n\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        name: \"\",\r\n        tar: \"\",\r\n        denier1: \"\",\r\n        pick: \"\",\r\n        panno: \"\",\r\n        denier2: \"\",\r\n        rate1: \"\",\r\n        rate2: \"\",\r\n    });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [weffWeight, setWeffWeight] = useState(0);\r\n    const [worpWeight, setWorpWeight] = useState(0);\r\n    const [resultRate1, setResultRate1] = useState(0);\r\n    const [resultRate2, setResultRate2] = useState(0);\r\n    const [storedRecords, setStoredRecords] = useState(JSON.parse(localStorage.getItem('storedRecords')) || []);\r\n    const [totalweight, setTotalWeight] = useState(0);\r\n    \r\n    \r\n    const [totalrate, setTotalRate] = useState(0);\r\n\r\n    function validateForm() {\r\n        return fields.name.length > 0\r\n            && fields.tar > 0\r\n            && fields.denier1 > 0\r\n            && fields.pick > 0\r\n            && fields.panno > 0\r\n            && fields.denier2 > 0\r\n            && fields.rate1 > 0\r\n            && fields.rate2 > 0\r\n            ;\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            console.log(\"fields:\", fields);\r\n\r\n            let wow = (fields.tar * fields.denier1 * 110) / 9000000;\r\n            setWorpWeight(wow);\r\n\r\n            let wew = (fields.pick * fields.panno * fields.denier2 * 110) / 9000000;\r\n            setWeffWeight(wew);\r\n\r\n            let r1 = (wow * fields.rate1) / 100;\r\n            setResultRate1(r1);\r\n\r\n            let r2 = (wew * fields.rate2) / 100;\r\n            setResultRate2(r2);\r\n            \r\n            let tw = (wow + wew);\r\n            setTotalWeight(tw);\r\n\r\n            let tr = (r1 + r2);\r\n            setTotalRate(tr);\r\n            \r\n            \r\n            storedRecords.push({\r\n                ...fields, weffWeight: wew.toString(), worpWeight: wow.toString(), resultRate1: r1.toString(),\r\n                resultRate2: r2.toString(), totalweight: tw.toString(), totalrate: tr.toString()\r\n            });\r\n            localStorage.setItem('storedRecords', JSON.stringify(storedRecords));\r\n            setStoredRecords(storedRecords.reverse())\r\n            setIsLoading(false)\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"padded-div\">\r\n            <form className=\"form\" className=\"form-box\" onSubmit={handleSubmit}>\r\n                <Row md={6} lg={6} xs={6} sm={6}> \r\n                    <Col  md={6} lg={6} xs={6} sm={6}>\r\n                        <FormGroup controlId=\"name\" bsSize=\"large\">\r\n                            <ControlLabel>Name</ControlLabel>\r\n                            <FormControl\r\n                                autoFocus=\"true\"\r\n                                type=\"text\"\r\n                                value={fields.name}\r\n                                onChange={handleFieldChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col  md={6} lg={6} xs={6} sm={6}>\r\n                        <FormGroup controlId=\"tar\" bsSize=\"large\">\r\n                            <ControlLabel>Tar</ControlLabel>\r\n                            <FormControl\r\n                                autoFocus\r\n                                type=\"number\"\r\n                                value={fields.tar}\r\n                                onChange={handleFieldChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col  md={6} lg={6} xs={6} sm={6}>\r\n                        <FormGroup controlId=\"denier1\" bsSize=\"large\">\r\n                            <ControlLabel>Denier1</ControlLabel>\r\n                            <FormControl\r\n                                autoFocus\r\n                                type=\"number\"\r\n                                value={fields.denier1}\r\n                                onChange={handleFieldChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col  md={6} lg={6} xs={6} sm={6}>\r\n                        <FormGroup controlId=\"pick\" bsSize=\"large\">\r\n                            <ControlLabel>Pick</ControlLabel>\r\n                            <FormControl\r\n                                autoFocus\r\n                                type=\"number\"\r\n                                value={fields.pick}\r\n                                onChange={handleFieldChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    \r\n                    <Col  md={6} lg={6} xs={6} sm={6}>\r\n                        <FormGroup controlId=\"panno\" bsSize=\"large\">\r\n                            <ControlLabel>Panno</ControlLabel>\r\n                            <FormControl\r\n                                autoFocus\r\n                                type=\"number\"\r\n                                value={fields.panno}\r\n                                onChange={handleFieldChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col  md={6} lg={6} xs={6} sm={6}>\r\n                        <FormGroup controlId=\"denier2\" bsSize=\"large\">\r\n                            <ControlLabel>Denier2</ControlLabel>\r\n                            <FormControl\r\n                                autoFocus\r\n                                type=\"number\"\r\n                                value={fields.denier2}\r\n                                onChange={handleFieldChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col  md={6} lg={6} xs={6} sm={6}>\r\n                        <FormGroup controlId=\"rate1\" bsSize=\"large\">\r\n                            <ControlLabel>Rate1</ControlLabel>\r\n                            <FormControl\r\n                                autoFocus\r\n                                type=\"number\"\r\n                                value={fields.rate1}\r\n                                onChange={handleFieldChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col  md={6} lg={6} xs={6} sm={6}>\r\n                        <FormGroup controlId=\"rate2\" bsSize=\"large\">\r\n                            <ControlLabel>Rate2</ControlLabel>\r\n                            <FormControl\r\n                                autoFocus\r\n                                type=\"number\"\r\n                                value={fields.rate2}\r\n                                onChange={handleFieldChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <br />\r\n                <LoaderButton\r\n                    block\r\n                    type=\"submit\"\r\n                    bsSize=\"large\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    Count\r\n               </LoaderButton>\r\n                <div className=\"result-box\">\r\n                    <Row>\r\n                        <Col md={6} lg={6} xs={6} sm={6}>\r\n                            <FormGroup>\r\n                                <ControlLabel>\r\n                                    Worp Weight\r\n                                </ControlLabel>\r\n                                <span>\r\n                                    {worpWeight.toFixed(4)}\r\n                                </span>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6} lg={6} xs={6} sm={6}>\r\n                            <FormGroup>\r\n                                <ControlLabel>Weff Weight</ControlLabel>\r\n                                <span>\r\n                                {weffWeight.toFixed(4)}\r\n                                </span>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6} lg={6} xs={6} sm={6}>\r\n                            <FormGroup>\r\n                                <ControlLabel>Rate 1 </ControlLabel>\r\n                                <span>{resultRate1.toFixed(4)}</span>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6} lg={6} xs={6} sm={6}>\r\n                            <FormGroup>\r\n                               <ControlLabel>Rate 2</ControlLabel>\r\n                                <span>{resultRate2.toFixed(4)}</span>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6} lg={6} xs={6} sm={6}>\r\n                            <FormGroup>\r\n                                <ControlLabel>Total Weight </ControlLabel>\r\n                                <span>{totalweight.toFixed(4)}</span>\r\n \r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6} lg={6} xs={6} sm={6}>\r\n                            <FormGroup>\r\n                                <ControlLabel>Total Rate</ControlLabel>\r\n                                <span>{totalrate.toFixed(4)}</span>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    \r\n                    \r\n                    \r\n                    \r\n                </div>\r\n                {\r\n                    storedRecords &&storedRecords.length>0&&\r\n                \r\n                <table className=\"table table-dark table-sm table-small compact\">\r\n                    <thead>\r\n                        <th>\r\n                            Name\r\n                        </th>\r\n                        <th>Tar</th>\r\n                        <th>D1</th>\r\n                        <th>D2</th>\r\n                        <th>Pick</th>\r\n                        <th>Panno</th>\r\n                        <th>R 1</th>\r\n                        <th>R 2</th>\r\n                        <th>Worp We.</th>\r\n                        <th>Weff We.</th>\r\n                        <th>Re. R 1</th>\r\n                        <th>Re. R 2</th>\r\n                        <th>To. We.</th>\r\n                        <th>To. Rt.</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            storedRecords &&storedRecords.length>0&& storedRecords.map((record)=>{\r\n                                return (\r\n                                    <tr>\r\n                                        <td>\r\n                                            {\r\n                                                record.name\r\n                                            }\r\n                                        </td>\r\n                                        <td>{ record.tar }</td>\r\n                                        <td>{ record.denier1 }</td>\r\n                                        <td>{ record.denier2 }</td>\r\n                                        <td>{ record.pick }</td>\r\n                                        <td>{ record.panno }</td>\r\n                                        <td>{ record.rate1 }</td>\r\n                                        <td>{ record.rate2 }</td>\r\n                                        <td>{ parseInt(record.worpWeight).toFixed(4) }</td>\r\n                                        <td>{ parseInt(record.weffWeight).toFixed(4) }</td>\r\n                                        <td>{parseInt( record.resultRate1).toFixed(4) }</td>\r\n                                        <td>{ parseInt(record.resultRate2).toFixed(4) }</td>\r\n                                        <td>{ parseInt(record.totalweight).toFixed(4) }</td>\r\n                                        <td>{parseInt( record.totalrate).toFixed(4) }</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                }\r\n            </form>\r\n        </div>\r\n    );\r\n}","import { useState } from \"react\";\r\n\r\nexport function useFormFields(initialState) {\r\n  const [fields, setValues] = useState(initialState);\r\n\r\n  return [\r\n    fields,\r\n    function(event) {\r\n      setValues({\r\n        ...fields,\r\n        [event.target.id]: event.target.value\r\n      });\r\n    }\r\n  ];\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./containers/Login\";\r\nimport Cost from \"./containers/Cost.jsx\";\r\n\r\nexport default function Routes({changeAuthState,isAuthenticated}) {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\">\r\n                <Login isAuthenticated={isAuthenticated} changeAuthState={(newAuthState)=>changeAuthState(newAuthState)} />\r\n            </Route>\r\n            {\r\n                isAuthenticated &&\r\n                    <Route  path=\"/cost\">\r\n                        <Cost isAuthenticated={isAuthenticated} changeAuthState={(newAuthState)=>changeAuthState(newAuthState)} />\r\n                    </Route>\r\n\r\n            }\r\n        </Switch>\r\n    );\r\n}","import React from \"react\";\r\n//import { Link } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport Routes from \"./Routes\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      isAuthenticated :false\r\n    }\r\n  }\r\n  changeAuthState(newAuthState){\r\n    this.setState({isAuthenticated:newAuthState})\r\n  }\r\n  render(){\r\n\r\n    return (\r\n      <div className=\"App container\">\r\n          <div className=\"navbar\">\r\n            <span className=\"item\">\r\n                {\r\n                  this.state.isAuthenticated\r\n                  ?\r\n                  <h4>HD Textile</h4>\r\n                  :\r\n                  <Link to=\"/\">\r\n                    Login\r\n                  </Link>\r\n                }\r\n  \r\n            </span>\r\n          </div>\r\n               \r\n        \r\n        <Routes isAuthenticated={this.state.isAuthenticated} changeAuthState={(newAuthState)=>this.changeAuthState(newAuthState)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}