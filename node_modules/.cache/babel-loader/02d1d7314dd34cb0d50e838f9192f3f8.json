{"ast":null,"code":"import _classCallCheck from\"/Volumes/workspace/github/costing-note-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/workspace/github/costing-note-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/workspace/github/costing-note-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/workspace/github/costing-note-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{useState,Component}from\"react\";import{FormGroup,FormControl,ControlLabel,Alert}from\"react-bootstrap\";import\"./Login.css\";import LoaderButton from\"../components/LoaderButton\";import{Redirect,withRouter}from'react-router';// import Cost from \"./Cost\";\n// import { render } from \"@testing-library/react\";\nvar Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);var _super=_createSuper(Login);function Login(props){var _this;_classCallCheck(this,Login);_this=_super.call(this,props);_this.validateForm=function(){return _this.state.username.length>0&&_this.state.password.length>0;};_this.handleSubmit=function(event){event.preventDefault();try{_this.setState({setIsLoading:true});if(_this.state.username!=null&&_this.state.password!=null){if(_this.state.username==\"hd\"&&_this.state.password==\"hd\"){_this.props.changeAuthState(true);setTimeout(function(){_this.setState({setIsLoading:false,redirect:true,error:false});},500);console.log('loged in');}else{_this.setState({error:'Invalid Credentials'});console.log('failed loged in');}}}catch(error){console.log('error:',error);_this.setState({setIsLoading:false});}};_this.state={username:\"\",password:\"\",isLoading:false,redirect:false,error:false};return _this;}_createClass(Login,[{key:\"render\",value:function render(){var _this2=this;return this.props.isAuthenticated==false&&/*#__PURE__*/React.createElement(\"div\",{className:\"Login\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(FormGroup,{controlId:\"username\",bsSize:\"large\"},/*#__PURE__*/React.createElement(ControlLabel,null,\"UserName\"),/*#__PURE__*/React.createElement(FormControl,{autoFocus:true,type:\"text\",value:this.state.username,onChange:function onChange(e){return _this2.setState({username:e.target.value});}})),/*#__PURE__*/React.createElement(FormGroup,{controlId:\"password\",bsSize:\"large\"},/*#__PURE__*/React.createElement(ControlLabel,null,\"Password\"),/*#__PURE__*/React.createElement(FormControl,{value:this.state.password,onChange:function onChange(e){return _this2.setState({password:e.target.value});},type:\"password\"})),/*#__PURE__*/React.createElement(LoaderButton,{block:true,type:\"submit\",bsSize:\"large\",isLoading:this.state.isLoading,disabled:!this.validateForm()},\"Login\"),this.state.error&&/*#__PURE__*/React.createElement(Alert,{danger:true},this.state.error)));}}]);return Login;}(Component);export default Login;","map":{"version":3,"sources":["/Volumes/workspace/github/costing-note-app/src/containers/Login.js"],"names":["React","useState","Component","FormGroup","FormControl","ControlLabel","Alert","LoaderButton","Redirect","withRouter","Login","props","validateForm","state","username","length","password","handleSubmit","event","preventDefault","setState","setIsLoading","changeAuthState","setTimeout","redirect","error","console","log","isLoading","isAuthenticated","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\r\nimport { FormGroup, FormControl, ControlLabel,Alert } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { Redirect,withRouter } from 'react-router';\r\n// import Cost from \"./Cost\";\r\n// import { render } from \"@testing-library/react\";\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      isLoading: false,\r\n      redirect: false,\r\n      error:false,\r\n    };\r\n  }\r\n\r\n\r\n  validateForm = () => {\r\n    return this.state.username.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n     try {\r\n      this.setState({ setIsLoading: true });\r\n      if (this.state.username != null &&\r\n        this.state.password != null ) {\r\n        if (this.state.username == \"hd\" && this.state.password == \"hd\") {\r\n          \r\n          this.props.changeAuthState(true)\r\n          setTimeout(()=>{\r\n            this.setState({ setIsLoading: false, redirect: true,error:false });\r\n          },500)\r\n   \r\n          console.log('loged in')\r\n        } else {\r\n          this.setState({error:'Invalid Credentials'})\r\n          console.log('failed loged in')\r\n        }\r\n\r\n\r\n      }\r\n    } catch (error) {\r\n      console.log('error:', error);\r\n      this.setState({ setIsLoading: false });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n    \r\n        this.props.isAuthenticated == false &&\r\n      \r\n      <div className=\"Login\">\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"username\" bsSize=\"large\">\r\n            <ControlLabel>UserName</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"text\"\r\n              value={this.state.username}\r\n              onChange={e => this.setState({username:e.target.value})}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={e => this.setState({password:e.target.value})}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <LoaderButton\r\n            block\r\n            type=\"submit\"\r\n            bsSize=\"large\"\r\n            isLoading={this.state.isLoading}\r\n            disabled={!this.validateForm()}\r\n\r\n          >\r\n            Login\r\n               </LoaderButton>\r\n        {\r\n          this.state.error &&\r\n        <Alert danger>{this.state.error}</Alert>\r\n        }\r\n        </form>\r\n        {/* {this.state.redirect && <Redirect to=\"/cost\"/>} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}